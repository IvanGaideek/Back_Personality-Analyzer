"""add not null constraints

Revision ID: aa413b6332c4
Revises: 151a626ce85c
Create Date: 2025-02-18 01:15:00.996580

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "aa413b6332c4"
down_revision: Union[str, None] = "151a626ce85c"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("users", sa.Column("email", sa.String(), nullable=False))
    op.drop_constraint("uq_users_foo_bar", "users", type_="unique")
    op.drop_constraint("uq_users_username", "users", type_="unique")
    op.create_unique_constraint(op.f("uq_users_email"), "users", ["email"])
    op.drop_column("users", "bar")
    op.drop_column("users", "foo")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column("foo", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.add_column(
        "users",
        sa.Column("bar", sa.INTEGER(), autoincrement=False, nullable=False),
    )
    op.drop_constraint(op.f("uq_users_email"), "users", type_="unique")
    op.create_unique_constraint("uq_users_username", "users", ["username"])
    op.create_unique_constraint("uq_users_foo_bar", "users", ["foo", "bar"])
    op.drop_column("users", "email")
    # ### end Alembic commands ###
